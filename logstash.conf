input {
  # This input plugin reads the Laravel log file
  file {
    path => "/var/log/laravel/*.log"  # Path to your Laravel log files
    start_position => "beginning"      # Start reading from the beginning of the log file
    sincedb_path => "/dev/null"        # Disable sincedb for development (you can change this for production)
    codec => json_lines                # Optionally use JSON format for structured logging (can be changed based on your log format)
  }
}

filter {
  # Example of parsing Laravel log lines
  grok {
    match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:message}" }
    # This assumes logs are in a format like:
    # "2024-11-21T10:15:10+00:00 error Some error message"
    # You can adjust it to match your log structure
  }

  # Optional: Add more filters like date, geoip, etc., if needed
  date {
    match => ["timestamp", "ISO8601"]
    target => "@timestamp"  # Standardize the timestamp field
  }

  # Add a custom field for Laravel to identify its logs easily
  mutate {
    add_field => { "app" => "laravel" }
  }
}

output {
  # Send logs to Elasticsearch
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]  # Elasticsearch host (use the container name if within Docker)
    index => "laravel_logs-%{+YYYY.MM.dd}"  # Use a date-based index for logs
    user => "elastic"  # Username if authentication is enabled
    password => "changeme"  # Password for Elasticsearch
    ssl => false  # Disable SSL if you're not using it
  }

  # Optional: Output to stdout for debugging (to see logs in console)
  stdout {
    codec => rubydebug
  }
}
